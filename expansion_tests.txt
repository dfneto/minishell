Fazer:
$USER$/
"$USER$/"

FAILING:
Com $?:
    echo 123$?
    echo $A$?
    echo $?123
    echo $?badasb
    echo $USER$?abc


echo "$1 $USER" (identificado o erro: quando a primeira palavra não é expansível, ver check_and_expand(t_token *token, t_env env)/(has_word_expansible(token->str)))
echo "123$0 $USER waka" (identificado o erro: quando a primeira palavra não é expansível, ver check_and_expand(t_token *token, t_env env)/(has_word_expansible(token->str)))
echo "123$0$USER waka" (identificado o erro: quando a primeira palavra não é expansível, ver check_and_expand(t_token *token, t_env env)/(has_word_expansible(token->str)))




-------------
Testes de leaks 0
make && leaks --atExit -- ./minishell
echo "$USER"
echo "$USER$USER"
echo "$USER $USER"
echo 1232"$USER$USER"
echo 1232"$USER$USER"12321

echo $USER
echo $USER$USER

echo 123$USER
echo 123$USER$USER

$?
$USER.
$USER.$USER

123$USER.
123$USER.$USER


export A='foo   ' B='bar   ' C='baz   '
echo $A$B$C
echo 42343$A$B$C
-------------
PASSING:
$USER. - ok
$USER.$USER - ok

123$USER. - ok
123$USER.$USER - ok

echo $b/
echo $USER!
echo $USER/


echo "$USER $USER" - ok
echo "123$? $USER" - OK
echo "123$0 $USER" - ok (o bash tem um comportamento específico)
echo "$?david" - ok
echo "aa $? $USER david" - ok
caso 1: echo "$USER" 				david 		- ok
caso 2: echo "$$USER"				$david 		- ok
caso 3: echo "$hola"							- ok
caso 4: echo "$$hola"				$			- ok
caso 5: echo "$"					$			- ok
caso 6: echo "$$"					$$			- ok
caso 8: echo "hi$"    				hi$     	- ok
caso 9: echo "hi$$"   				hi$$    	- ok
caso 13: echo "'$USER'"				'david'		- ok
caso 7: echo "$/"		     		$/      	- ok
caso 10: echo "hi$/"  				hi$/    	- ok
caso 11: echo "hi$$/"  				hi$$/ 		- ok
caso 12: echo "'$'"					'$'			- ok
caso 13: echo "$USER$PATH$PWD"		imprime...	- ok

-------------

echo "$"
echo "hi$"
echo "$hola"
echo $"USER"
echo $"hola"

echo "$USER"
echo $USER$USER
echo $USER$USER$USER


echo "$$hola"
echo "$$USER"
echo "hi$$"
echo "$$"

echo "$/"
echo ""hi$/"
echo ""hi$$/"


Handle environment variables ($ followed by a sequence of characters) which should expand to their values.

$a$b$c
hola$a$b$c


echo $a$a$a

Testar:
bash-3.2$ export a="    ls    -la   "
bash-3.2$ echo$a
ls -la
bash-3.2$ echo$USER
bash: echodavifern: command not found
bash-3.2$ export b="ls -la"
bash-3.2$ echo$b
bash: echols: command not found

export a="  ls   -l   -a  -F   "
export b="ls   -la  "

hola$a
bash: hola: command not found

hola$b
bash: holals: command not found  

echo "$USER$USER" -> deve printar sem aspas
testar hola$USER$USER$USER
export a="  ls   -l   -a  -F   "
testar hola $a $USER $USER (uma vez me deu segfault e depois não mais)  

-echo "$USER$USER" -> deve printar sem aspas
-testar hola$USER$USER$USER
-testar $z, hola$z quando z eh uma variável não existente em env
--$a$a
-"$a$a"
Testes de expansão:
-"    $PWD   $USER   a"
-0123456789012345678901
-         i1         2
-
-"1234$USER#5678$PATH****"
-0123456789012345678901234
-
-"1234$USER”
-01234567890
-
-"123$USER#456"
-012345678901234
-
-
-Testar:
-"123$USER"
-"123 $USER"
-123$USER
-"  $PWD  $USER a"

+<"ls       -la">
+
+hola$a
+token value:
+<holals       -la> -> tem que ser: holals -la
